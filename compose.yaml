services:
  nginx:
    build:
      context: ./nginx
    image: nginx
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    restart: always
    networks:
      octorrent:
        ipv4_address: 10.5.0.2
    #profiles:
    #  - donotstart

  database:
    build:
      context: ./database
    image: mongo
    container_name: database
    ports:
      - 27017:27017
    volumes:
      - ./data/db:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=
    networks:
      octorrent:
        ipv4_address: 10.5.0.10

  web:
    build:
      context: ./www
      args:
        RUNTIME: ${RUNTIME}
    image: octorrent_org_www
    container_name: www
    environment:
      NODE_ENV: production
    restart: always
    volumes:
      - ./env:/env
    networks:
      octorrent:
        ipv4_address: 10.5.0.3
    #profiles:
    #  - donotstart

  forums:
    build:
      context: ./forums
      args:
        RUNTIME: ${RUNTIME}
    image: octorrent_org_forums
    container_name: forums
    environment:
      NODE_ENV: ${NODE_ENV:-production}
    restart: always
    volumes:
      - ./env:/env
    networks:
      octorrent:
        ipv4_address: 10.5.0.4
    #profiles:
    #  - donotstart

networks:
  octorrent:
    #external: true
    driver: bridge
    attachable: true
    ipam:
     config:
       - subnet: 10.5.0.0/24
